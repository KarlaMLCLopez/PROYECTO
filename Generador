/* Archivo: Generador.S
   Dispositivo: PIC16F887
   Autor: Karla Lopez 
   Compilador: pic-as (v2.30), MPLABX V5.40
     
   Programa: Generador de ondas 
   Hardware: Displays, leds, pushbuttons 
     
   Creado: 10/02/2023
   Ultima modificación: 19/03/2023  
 */

;   ---------------------------------------------------
	PROCESSOR 16F887
#include <xc.inc>

;configuration word 1 ( Bits de configuracion)
 CONFIG FOSC=INTRC_NOCLKOUT // Oscillador interno salidas
 CONFIG WDTE = OFF // WDT disabled (reinicio repetitivo del pic)
 CONFIG PWRTE=OFF // PWRT enabled (espera de 72ms al iniciar)
 CONFIG MCLRE=OFF // El ping de MCLR se utiliza como I/o
 CONFIG CP=OFF	// Sin proteccion de codigo
 CONFIG CPD =OFF  // Sin proteccion de datos
 
 CONFIG BOREN=OFF // Sin reinicio cuando el voltaje de alimentacion baja de 4v
 CONFIG IESO=OFF // Reinicio sin cambio de reloj de interno a externo
 CONFIG FCMEN=OFF // Cambio de reloj externo a interno en caso de fallo
 CONFIG LVP=OFF // Programacion en bajo voltaje permitida
 
 ;configuration word 2
 CONFIG WRT=OFF // Proteccion de autoescritura por el programa desactivada
 CONFIG BOR4V=BOR40V // Reinicio abajo de 4V, (BOR21V=2.1V)
 
PSECT udata_shr
W_TEMP: DS 1; 1 byte reservado
STATUS_TEMP: DS 1; 1 byte reservado
    
PSECT udata_bank0 ;common memory
FRECUENCIA: DS 1
DELAY: DS 1 
CONTADOR0: DS 1
HALF: DS 1
ONDAS: DS 1       
DISPLAYS: DS 4 
FLAGS: DS 1
CONT: DS 1
ban: DS 1
    
;-------------Vector reset------------------------------------
PSECT resVect, Class=CODE, abs, delta=2
ORG 00h ;    posicion 000h para el reset
    
resetVec:
    PAGESEL main
    goto main
;-------------------------------------------------------------
PSECT code, delta=2, abs
    ORG 100h ; posición para el coódigo

TablaDeUnidades: ;unidades Hz
    clrf PCLATH
    bsf PCLATH,0
    andlw 0x0F
    addwf PCL
    retlw 01101101B	    ;0
    retlw 01111101B	    ;1
    retlw 00000111B	    ;2
    retlw 01101111B	    ;3
    retlw 00000110B	    ;4
    retlw 01001111B	    ;5
    retlw 01101101B	    ;6
    retlw 01111111B	    ;7
    retlw 01011011B	    ;8
    retlw 01111111B	    ;9
    retlw 01101101B	    ;A
    retlw 01111101B	    ;B
    retlw 01101101B	    ;C
    retlw 01011011B	    ;D
    retlw 00000111B	    ;E
    retlw 01111101B	    ;F 
    
TablaDeDecenas: ;decenas Hz
    clrf PCLATH
    bsf PCLATH,0
    andlw 0x0F
    addwf PCL
    retlw 00000110B	    ;0
    retlw 00000110B	    ;1
    retlw 00000110B	    ;2
    retlw 00000110B	    ;3
    retlw 01011011B	    ;4
    retlw 01011011B	    ;5
    retlw 01011011B	    ;6
    retlw 01011011B	    ;7
    retlw 01001111B        ;8
    retlw 01001111B	    ;9
    retlw 01100110B	    ;A
    retlw 01101101B	    ;B
    retlw 00000111B	    ;C
    retlw 00000110B	    ;D
    retlw 00000110B	    ;E
    retlw 00111111B	    ;F
    
    
    //
TablaDeCentenas: ;centenas Hz
    clrf PCLATH
    bsf PCLATH,0
    andlw 0x0F
    addwf PCL
    retlw 00111111B	    ;0
    retlw 00111111B	    ;1
    retlw 00111111B	    ;2
    retlw 00111111B	    ;3
    retlw 00111111B	    ;4
    retlw 00111111B	    ;5
    retlw 00111111B	    ;6
    retlw 00111111B	    ;7
    retlw 00111111B	    ;8
    retlw 00111111B	    ;9
    retlw 00111111B	    ;A
    retlw 00111111B	    ;B
    retlw 00111111B	    ;C
    retlw 00000110B	    ;D
    retlw 01011011B	    ;E
    retlw 01101111B	    ;F    
 
TablaDeMilesimas: ;miles Hz
    clrf PCLATH
    bsf PCLATH,0
    andlw 0x0F
    addwf PCL
    retlw 00111111B	    ;0
    retlw 00111111B	    ;1
    retlw 00111111B	    ;2
    retlw 00111111B	    ;3
    retlw 00111111B	    ;4
    retlw 00111111B	    ;5
    retlw 00111111B	    ;6
    retlw 00111111B	    ;7
    retlw 00111111B	    ;8
    retlw 00111111B	    ;9
    retlw 00111111B	    ;A
    retlw 00111111B	    ;B
    retlw 00111111B	    ;C
    retlw 00111111B	    ;D
    retlw 00111111B	    ;E
    retlw 01001111B	    ;F
    
TablaDeUnidadesK: ;unidades kHz
    clrf PCLATH
    bsf PCLATH,0
    andlw 0x0F
    addwf PCL
    retlw 01101111B	    ;0
    retlw 01011011B	    ;1
    retlw 01101101B	    ;2
    retlw 01101111B	    ;3
    retlw 01001111B	    ;4
    retlw 01111111B	    ;5
    retlw 01101101B	    ;6
    retlw 01001111B	    ;7
    retlw 01001111B	    ;8
    retlw 00000111B	    ;9
    retlw 01111101B	    ;A
    retlw 01101101B	    ;B
    retlw 01011011B	    ;C
    retlw 01111101B	    ;D
    retlw 01101101B	    ;E
    retlw 00111111B	    ;F 
    
TablaDeDecenasK: ;decenas kHz
    clrf PCLATH
    bsf PCLATH,0
    andlw 0x0F
    addwf PCL
    retlw 11001111B	    ;0
    retlw 11100110B	    ;1
    retlw 11100110B	    ;2
    retlw 11100110B	    ;3
    retlw 11101101B	    ;4
    retlw 11101101B	    ;5
    retlw 11111101B	    ;6
    retlw 10000111B	    ;7
    retlw 11111111B        ;8
    retlw 11101111B	    ;9
    retlw 10000110B	    ;A
    retlw 11100110B	    ;B
    retlw 11101111B	    ;C
    retlw 11111111B	    ;D
    retlw 11101101B	    ;E
    retlw 00111111B	    ;F
    
TablaDeCentenasK: ;centenas kHz
    clrf PCLATH
    bsf PCLATH,0
    andlw 0x0F
    addwf PCL
    retlw 00111111B	    ;0
    retlw 00111111B	    ;1
    retlw 00111111B	    ;2
    retlw 00111111B	    ;3
    retlw 00111111B	    ;4
    retlw 00111111B	    ;5
    retlw 00111111B	    ;6
    retlw 00111111B	    ;7
    retlw 00111111B	    ;8
    retlw 00111111B	    ;9
    retlw 00000110B	    ;A
    retlw 00000110B	    ;B
    retlw 00000110B	    ;C
    retlw 01011011B	    ;D
    retlw 01101101B	    ;E
    retlw 00111111B	    ;F
    
TablaDeMilesimasK: ;miles kHz
    clrf PCLATH
    bsf PCLATH,0
    andlw 0x0F
    addwf PCL
    retlw 00111111B	    ;0
    retlw 00111111B	    ;1
    retlw 00111111B	    ;2
    retlw 00111111B	    ;3
    retlw 00111111B	    ;4
    retlw 00111111B	    ;5
    retlw 00111111B	    ;6
    retlw 00111111B	    ;7
    retlw 00111111B	    ;8
    retlw 00111111B	    ;9
    retlw 00111111B	    ;A
    retlw 00111111B	    ;B
    retlw 00111111B	    ;C
    retlw 00111111B	    ;D
    retlw 00111111B	    ;E
    retlw 00000110B	    ;F    
;---------------------------------------------------------------    
re_timer0 MACRO
    banksel TMR0    
    movlw 1 
    movwf TMR0	
    bcf INTCON,2    
    endm   
    
ORG 04h ; posicion int_tmr0
    
push:
    movwf W_TEMP    ;mueve valor a W temporal
    swapf STATUS, W ;intercambia nibble más significativo con menos, coloca resultado en W
    movwf STATUS_TEMP	;mueve el resultado a STATUS_TEMP
    
isr:
    btfsc RBIF ;Hay flag de interrupción en B?
    call int_IOCB ;no, llama interrupción IOCB
    
pop:
    swapf STATUS_TEMP, W ;intercambia nibble más significativo con menos, coloca resultado en W
    movwf STATUS    ;mueve resultado chequeando status
    swapf W_TEMP, F ;intercambia nibble más significativo con menos, coloca resultado en F
    swapf W_TEMP, W ;;intercambia nibble más significativo con menos, coloca resultado en W
    retfie ;sale de interrupción
    
;-------------interrupcion-boton----------
int_IOCB:
    banksel PORTB   ;banco PuertoB
    btfss PORTB, 0  ; ;boton 0
    call incre ;incremeta frecuencia
    btfss PORTB, 1   ;boton 1
    call decre    ;decrementa frecuencia
    btfss PORTB, 2  ;boton 2
    call cambiarhz  ;cambia a Hz
    btfss PORTB, 3   ;boton 3
    call cambiarkhz ;cambia a kHz
    btfss PORTB, 4  ;boton 4
    call cambio   ;cambia de onda
    bcf RBIF	    ;limpia la bandera interrupcion
    return  
    
main:
    bsf ban, 0 ;inicia en kHz, ponebandera para kHz
    call config_puertos ; Configuracion puertos
    call IOCBconf   ;configuracion interrupciones puertob
    call conf_tmr0_flags ;configuracion para habilitar interrupicones
    call config_reloj   ; Configuracion oscilador
    call config_timer0  ; Configuracion prescaler timer0
    banksel PORTA
;-----------------------loop principal-------------------------------------------------------    
loop:
    call DISPLAYSvalores ;coloca los valores a mostrar en los dsplays
    call ChangeDisplay	;cambia de display con multiplexado
    call MakeOnda ;genera onda activa
    goto loop
;-----------------------------Preparacion de los displays----------------------    

IOCBconf:
    banksel TRISA ;se mueve a banco que contiene TRISA
    bsf IOCB, 0 
    bsf IOCB, 1	
    bsf IOCB, 2 
    bsf IOCB, 3	
    bsf IOCB, 4 ; pines 0 al 4 on change
    banksel PORTA ;se mueve al banco que contiene PORTA
    movf PORTB, W ;mueve valor de PORTB a W
    bcf RBIF ;limpia bandera
    return
    
;--------------------sub rutinas-----------------------
cambiarhz:
    bcf ban, 0 ;limpia bandera
    call config_timer02 ;llama configuracion para hz del prescaler
    return
    
cambiarkhz:
    bsf ban, 0 ;setea bandera
    call config_timer0 ;llama configuracion para khz del prescaler
    return    
    
MakeOnda:
      btfss INTCON,2
      goto $-1
      re_timer0 ; reinicia timer0
      incf CONTADOR0	;incrementa CONTADOR0
      movf DELAY, W ;delay a w
      subwf CONTADOR0, W ;Restet CONTADOR0 con el delay
      btfss STATUS, 0	;Es negativo?
      return ;no, sale
      clrf CONTADOR0	;si, limpia delay
      movlw 1
      addwf FRECUENCIA	;incrementa frecuencia
      btfss ONDAS, 0
      goto $+2			;apgado
      call cuadrada	;onda cuadrada
      btfss ONDAS, 1
      goto $+2
      call triangular	;onda triangular
      return
;----------------- Ondas---------------------------------------------------------     
cuadrada:
      bcf  ONDAS, 1
      movf FRECUENCIA, W ;mueve frecuencia a w
      sublw 64       ;le resta valor máximo
      btfss STATUS,2    ; bit mas significativo es 0?
      return	    ;no,sale
      movlw 0b10000000  ; si, se coloca bits en porta para que solo funicone una salida
      xorwf PORTA, F    
      return
      
triangular:
    bcf ONDAS,0
    btfss HALF,0 ; HALF es 0?
    goto $+2      ; no, hace procedimiento de subida
    goto $+8      ; si, hace proccedmiento de bajada
    incf PORTA, F  ;incrementa PORTA
    movf PORTA, W    ;mover valor portA a W
    xorlw 255	      ; restar el valor de 255 con el puerto 
    btfss ZERO        ; bandera de zero es 0?
    return              ; no, sale
    bsf HALF,0 ; si, setea bandera HALF y sale
    return
    decfsz PORTA,F      ;decrementa el puertoa
    goto $+2          ;cuando llegue a 0 sale
    bcf HALF,0  ; Si no, limpia HALF
    return
;----------------Seleccion de displays-----------------------------------------------
      
ChangeDisplay:
    bcf	PORTD,0
    bcf	PORTD,1
    bcf	PORTD,2
    bcf	PORTD,3   ;limpia portD
    btfss FLAGS,1  ; FLAGS 1 es 0?
    goto $+3	       ;no, salta
    btfsc FLAGS,0  ; si, FLAGS 0 es 1?
    goto DISPLAYS_3   ; no, DISPLAYS 3
    btfsc FLAGS,1  ; FLAGS 1 es 1?
    goto DISPLAYS_2   ; no, diplay 2
    btfsc FLAGS,0  ; si, FLAGS 0 es 0?
    goto DISPLAYS_0   ; no, DISPLAYS 0
    goto DISPLAYS_1   ; si, DISPLAYS 1
    return
      
DISPLAYS_0:
    movf DISPLAYS, W	;Mueve DISPLAYS a W
    movwf PORTC		; Se lo pone a PORTC
    bsf	PORTD,0	;habilita PIN0
    bcf	FLAGS,0	;limpa y setea FLAGS para siguiente DISPLAYS
    bsf	FLAGS,1
    return
    
DISPLAYS_1:
    movf DISPLAYS+1, W	;Mueve DISPLAYS+1 a W
    movwf PORTC		;Se lo pone a PORTC
    bsf	PORTD,1	;Habilita PIN1
    bsf	FLAGS,0 ;limpa y setea FLAGS para siguiente DISPLAYS
    bcf	FLAGS,1
    return
    
DISPLAYS_2:  
    movf DISPLAYS+2, W	;Mueve DISPLAYS+2 a W
    movwf PORTC	;Se lo pone a PORTC
    bsf PORTD,2	; Habilita PIN2
    bsf FLAGS,0  ;limpa y setea FLAGS para siguiente DISPLAYS
    bsf	FLAGS,1
    return
    
DISPLAYS_3: 
    movf DISPLAYS+3, W ;Mueve DISPLAYS+2 a W
    movwf PORTC	;se lo pone a PORTC
    bsf PORTD,3	; Habilita PIN2
    bcf FLAGS,0 ;limpa y setea FLAGS para siguiente DISPLAYS
    bcf FLAGS,1
    return
;----------------------Incrementos y decrementos de frecuencia------------------------------   
DISPLAYSvalores:
    btfss ban, 0 ;BANDER es 1?
    goto $+2
    goto $+14
    movf CONT, W ;no, mueve valor CONT a w
    call TablaDeMilesimas  ;llama en la tabla de Hz según valor de CONT
    movwf DISPLAYS   ;mueve a DISPLAYS para mostrar
    movf CONT, W	;centenas
    call TablaDeCentenas
    movwf DISPLAYS+1	
    movf CONT, W	;decenas     
    call TablaDeDecenas
    movwf DISPLAYS+2	
    movf CONT, W	;unidades
    call TablaDeUnidades
    movwf DISPLAYS+3	
    return
    movf CONT, W	;si, mueve valor de CONT a w
    call TablaDeMilesimasK	;llama en la tabla de kHz segun valor de CONT
    movwf DISPLAYS	;mueve a DISPLAYS para mostrar
    movf CONT, W	;centenas
    call TablaDeCentenasK 
    movwf DISPLAYS+1	
    movf CONT, W	;decenas
    call TablaDeDecenasK
    movwf DISPLAYS+2	
    movf CONT, W	;unidades
    call TablaDeUnidadesK
    movwf DISPLAYS+3	
    return
    
incre: 
    movlw 17
    subwf DELAY	;le resta al delay
    btfss STATUS, 0    ;el resultado es 0?
    goto $+2	    
    goto $+4
    movlw 0	    ;no limpia delay
    movwf DELAY
    return
    incf CONT ;si incrementa CONT
    return
 
decre:
    movlw 17
    addwf DELAY	;le suma al delay
    btfsc STATUS, 0    ;el rsultado es 0, overboard?
    goto $+2	    
    goto $+4
    movlw 255    ;limpia delay
    movwf DELAY
    return
    decf CONT ;decrementa CONT
    return
      
;---------------------- Seleccionar que tipo de onda mostrar-------------------------------
cambio:
    clrf PORTA    ;limpia puertoa
    incf ONDAS ;incrementa onda
    return
;-------------------Seccion de configuracion-----------------------------------------------------      

conf_tmr0_flags:
    BSF GIE  
    BSF RBIE ;activa banderas interrupcion en puertob
    BCF RBIF
    return 
    
config_timer0:
    banksel OPTION_REG
    BCF T0CS
    BCF PSA
    BCF PS2
    BCF PS1
    BCF PS0	    ;1:256
    banksel PORTA
    BSF T0IF
    return

config_timer02:
    banksel OPTION_REG 
    BCF T0CS
    BCF PSA
    BSF PS2
    BSF PS1
    BSF PS0	    ; 1:1
    banksel PORTA
    BSF T0IF
    return    
    
config_puertos:
    banksel ANSEL
    clrf ANSEL
    clrf ANSELH 
    banksel TRISA
    clrf TRISA	
    clrf TRISC
    clrf TRISD
    bsf TRISB,0
    bsf TRISB,1 
    bsf TRISB,2
    bsf TRISB,3
    bsf TRISB,4
    bcf OPTION_REG, 7 
    banksel PORTA 
    clrf PORTA
    movlw 255 ;valor inicial delay
    movwf DELAY
    clrf PORTC
    clrf PORTD
    clrf HALF
    clrf ONDAS
    return   
    
config_reloj:
    banksel OSCCON ; oscilador en 8MHz
    bsf	IRCF2
    bcf	IRCF1
    bcf	IRCF0
    bsf	SCS    ;1MHz
    return    
END
